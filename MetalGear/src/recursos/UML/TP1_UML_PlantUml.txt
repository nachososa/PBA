@startuml
class Juego {
  - config : String
  - misionesCompletadas : int
  + iniciarMision()
  + guardarEstado()
  + cargarEstado()
}

abstract class Mision {
  + iniciar()
  +desbloquearZona()
}

class Hangar extends Mision{
  +iniciar()
  +buscarObjeto()
}

class MisionFinal extends Mision{
  +iniciar()
  +batallaFinal()
}

class Mapa {
  - matriz : Celda[][]
  +colocarPersonaje()
  +moverPersonaje()
  +mostrar()
}

class Celda{
  +getPersonaje()
  +setPersonaje()
}

abstract class Personaje{
  -posicion : Posicion
  +mover()
}

class Posicion{
  +getX()
  +getY()
}

class Objeto{
  +getTipo()
  +recoger()
}

class Snake extends Personaje{
  +atacar()
  +moverse()
  +usarItem()
}

interface Enemigo{
  +atacar()
  +patrullar()
}

class Guardia extends Personaje implements Enemigo{
  +patrullar()
  +detectarSnake()
}

class MetalGear extends Personaje implements Enemigo{
  -hp:int = 100
  +ataqueMisil()
  +ataqueLaser()
}

class Turnos{
  +turnoSnake()
  +turnometalGear()
}

Juego --> Mapa
Juego --> Mision
Juego --> Snake
Mapa --> Celda
Celda --> Personaje
Celda --> Objeto
Personaje --> Posicion
MisionFinal --> Turnos
Turnos --> Snake
Turnos --> MetalGear

@enduml